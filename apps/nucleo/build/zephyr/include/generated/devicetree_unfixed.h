/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   nucleo_wl55jc2_cm0.dts.pre.tmp
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /clocks
 *   4   /clocks/clk-hsi
 *   5   /clocks/clk-lse
 *   6   /clocks/clk-lsi
 *   7   /clocks/clk-msi
 *   8   /cpus
 *   9   /cpus/cpu@0
 *   10  /gpio_keys
 *   11  /soc
 *   12  /soc/pin-controller@48000000
 *   13  /clocks/clk-hse
 *   14  /clocks/pll
 *   15  /soc/rcc@58000000
 *   16  /soc/pin-controller@48000000/gpio@48000000
 *   17  /gpio_keys/btn_0
 *   18  /gpio_keys/btn_1
 *   19  /soc/pin-controller@48000000/gpio@48000800
 *   20  /gpio_keys/btn_2
 *   21  /leds
 *   22  /soc/pin-controller@48000000/gpio@48000400
 *   23  /leds/led_0
 *   24  /leds/led_1
 *   25  /leds/led_2
 *   26  /memory@20000000
 *   27  /memory@20000000/partitions
 *   28  /memory@20000000/partitions/partition@2000fe00
 *   29  /memory@20000000/partitions/partition@2000ff00
 *   30  /soc/interrupt-controller@e000e100
 *   31  /soc/i2c@40005400
 *   32  /soc/pin-controller@48000000/i2c2_scl_pa12
 *   33  /soc/pin-controller@48000000/i2c2_sda_pa11
 *   34  /soc/i2c@40005800
 *   35  /soc/i2c@40005c00
 *   36  /soc/interrupt-controller@58000800
 *   37  /soc/ipcc@58000C10
 *   38  /soc/rtc@40002800
 *   39  /soc/pin-controller@48000000/lpuart1_rx_pa3
 *   40  /soc/pin-controller@48000000/lpuart1_tx_pa2
 *   41  /soc/serial@40008000
 *   42  /soc/spi@40003800
 *   43  /soc/pin-controller@48000000/spi1_miso_pa6
 *   44  /soc/pin-controller@48000000/spi1_mosi_pa7
 *   45  /soc/pin-controller@48000000/spi1_nss_pa4
 *   46  /soc/pin-controller@48000000/spi1_sck_pa5
 *   47  /soc/spi@40013000
 *   48  /soc/timer@e000e010
 *   49  /soc/timers@40007c00
 *   50  /soc/flash-controller@58004000
 *   51  /soc/flash-controller@58004000/flash@8000000
 *   52  /soc/pin-controller@48000000/adc_in0_pb13
 *   53  /soc/pin-controller@48000000/adc_in10_pa14
 *   54  /soc/pin-controller@48000000/adc_in11_pa15
 *   55  /soc/pin-controller@48000000/adc_in1_pb14
 *   56  /soc/pin-controller@48000000/adc_in2_pb3
 *   57  /soc/pin-controller@48000000/adc_in3_pb4
 *   58  /soc/pin-controller@48000000/adc_in4_pb2
 *   59  /soc/pin-controller@48000000/adc_in5_pb1
 *   60  /soc/pin-controller@48000000/adc_in6_pa10
 *   61  /soc/pin-controller@48000000/adc_in7_pa11
 *   62  /soc/pin-controller@48000000/adc_in8_pa12
 *   63  /soc/pin-controller@48000000/adc_in9_pa13
 *   64  /soc/pin-controller@48000000/dac_out1_pa10
 *   65  /soc/pin-controller@48000000/gpio@48001c00
 *   66  /soc/pin-controller@48000000/i2c1_scl_pa9
 *   67  /soc/pin-controller@48000000/i2c1_scl_pb6
 *   68  /soc/pin-controller@48000000/i2c1_scl_pb8
 *   69  /soc/pin-controller@48000000/i2c1_sda_pa10
 *   70  /soc/pin-controller@48000000/i2c1_sda_pb7
 *   71  /soc/pin-controller@48000000/i2c1_sda_pb9
 *   72  /soc/pin-controller@48000000/i2c2_scl_pb15
 *   73  /soc/pin-controller@48000000/i2c2_sda_pa15
 *   74  /soc/pin-controller@48000000/i2c3_scl_pa7
 *   75  /soc/pin-controller@48000000/i2c3_scl_pb10
 *   76  /soc/pin-controller@48000000/i2c3_scl_pb13
 *   77  /soc/pin-controller@48000000/i2c3_scl_pc0
 *   78  /soc/pin-controller@48000000/i2c3_sda_pb11
 *   79  /soc/pin-controller@48000000/i2c3_sda_pb14
 *   80  /soc/pin-controller@48000000/i2c3_sda_pb4
 *   81  /soc/pin-controller@48000000/i2c3_sda_pc1
 *   82  /soc/pin-controller@48000000/i2s2_ck_pa8
 *   83  /soc/pin-controller@48000000/i2s2_ck_pa9
 *   84  /soc/pin-controller@48000000/i2s2_ck_pb10
 *   85  /soc/pin-controller@48000000/i2s2_ck_pb13
 *   86  /soc/pin-controller@48000000/i2s2_sd_pa10
 *   87  /soc/pin-controller@48000000/i2s2_sd_pb15
 *   88  /soc/pin-controller@48000000/i2s2_sd_pc1
 *   89  /soc/pin-controller@48000000/i2s2_sd_pc3
 *   90  /soc/pin-controller@48000000/i2s2_ws_pa9
 *   91  /soc/pin-controller@48000000/i2s2_ws_pb12
 *   92  /soc/pin-controller@48000000/i2s2_ws_pb9
 *   93  /soc/pin-controller@48000000/lpuart1_cts_pa6
 *   94  /soc/pin-controller@48000000/lpuart1_cts_pb13
 *   95  /soc/pin-controller@48000000/lpuart1_rts_pa1
 *   96  /soc/pin-controller@48000000/lpuart1_rts_pb1
 *   97  /soc/pin-controller@48000000/lpuart1_rts_pb12
 *   98  /soc/pin-controller@48000000/lpuart1_rx_pb10
 *   99  /soc/pin-controller@48000000/lpuart1_rx_pc0
 *   100 /soc/pin-controller@48000000/lpuart1_tx_pb11
 *   101 /soc/pin-controller@48000000/lpuart1_tx_pc1
 *   102 /soc/pin-controller@48000000/spi1_miso_pa11
 *   103 /soc/pin-controller@48000000/spi1_miso_pb4
 *   104 /soc/pin-controller@48000000/spi1_mosi_pa12
 *   105 /soc/pin-controller@48000000/spi1_mosi_pb5
 *   106 /soc/pin-controller@48000000/spi1_nss_pa15
 *   107 /soc/pin-controller@48000000/spi1_nss_pb2
 *   108 /soc/pin-controller@48000000/spi1_sck_pa1
 *   109 /soc/pin-controller@48000000/spi1_sck_pb3
 *   110 /soc/pin-controller@48000000/spi2_miso_pa5
 *   111 /soc/pin-controller@48000000/spi2_miso_pb14
 *   112 /soc/pin-controller@48000000/spi2_miso_pc2
 *   113 /soc/pin-controller@48000000/spi2_mosi_pa10
 *   114 /soc/pin-controller@48000000/spi2_mosi_pb15
 *   115 /soc/pin-controller@48000000/spi2_mosi_pc1
 *   116 /soc/pin-controller@48000000/spi2_mosi_pc3
 *   117 /soc/pin-controller@48000000/spi2_nss_pa9
 *   118 /soc/pin-controller@48000000/spi2_nss_pb12
 *   119 /soc/pin-controller@48000000/spi2_nss_pb9
 *   120 /soc/pin-controller@48000000/spi2_sck_pa8
 *   121 /soc/pin-controller@48000000/spi2_sck_pa9
 *   122 /soc/pin-controller@48000000/spi2_sck_pb10
 *   123 /soc/pin-controller@48000000/spi2_sck_pb13
 *   124 /soc/pin-controller@48000000/tim16_ch1_pa6
 *   125 /soc/pin-controller@48000000/tim16_ch1_pb8
 *   126 /soc/pin-controller@48000000/tim16_ch1n_pb6
 *   127 /soc/pin-controller@48000000/tim17_ch1_pa7
 *   128 /soc/pin-controller@48000000/tim17_ch1_pb9
 *   129 /soc/pin-controller@48000000/tim17_ch1n_pb7
 *   130 /soc/pin-controller@48000000/tim1_ch1_pa8
 *   131 /soc/pin-controller@48000000/tim1_ch1n_pa7
 *   132 /soc/pin-controller@48000000/tim1_ch1n_pb13
 *   133 /soc/pin-controller@48000000/tim1_ch2_pa9
 *   134 /soc/pin-controller@48000000/tim1_ch2n_pb14
 *   135 /soc/pin-controller@48000000/tim1_ch2n_pb8
 *   136 /soc/pin-controller@48000000/tim1_ch3_pa10
 *   137 /soc/pin-controller@48000000/tim1_ch3n_pb15
 *   138 /soc/pin-controller@48000000/tim1_ch3n_pb9
 *   139 /soc/pin-controller@48000000/tim1_ch4_pa11
 *   140 /soc/pin-controller@48000000/tim2_ch1_pa0
 *   141 /soc/pin-controller@48000000/tim2_ch1_pa15
 *   142 /soc/pin-controller@48000000/tim2_ch1_pa5
 *   143 /soc/pin-controller@48000000/tim2_ch2_pa1
 *   144 /soc/pin-controller@48000000/tim2_ch2_pb3
 *   145 /soc/pin-controller@48000000/tim2_ch3_pa2
 *   146 /soc/pin-controller@48000000/tim2_ch3_pb10
 *   147 /soc/pin-controller@48000000/tim2_ch4_pa3
 *   148 /soc/pin-controller@48000000/tim2_ch4_pb11
 *   149 /soc/pin-controller@48000000/usart1_cts_pa11
 *   150 /soc/pin-controller@48000000/usart1_cts_pb4
 *   151 /soc/pin-controller@48000000/usart1_rts_pa12
 *   152 /soc/pin-controller@48000000/usart1_rts_pb3
 *   153 /soc/pin-controller@48000000/usart1_rx_pa10
 *   154 /soc/pin-controller@48000000/usart1_rx_pb7
 *   155 /soc/pin-controller@48000000/usart1_tx_pa9
 *   156 /soc/pin-controller@48000000/usart1_tx_pb6
 *   157 /soc/pin-controller@48000000/usart2_cts_pa0
 *   158 /soc/pin-controller@48000000/usart2_rts_pa1
 *   159 /soc/pin-controller@48000000/usart2_rx_pa3
 *   160 /soc/pin-controller@48000000/usart2_tx_pa2
 *   161 /subghz
 *   162 /subghz/pin_0
 *   163 /subghz/pin_1
 *   164 /subghz/pin_2
 *   165 /subghz/pin_3
 *   166 /subghz/pin_4
 *   167 /subghz/pin_5
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_subghz)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_subghz) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /clocks */ \
	8, /* /cpus */ \
	10, /* /gpio_keys */ \
	11, /* /soc */ \
	21, /* /leds */ \
	26, /* /memory@20000000 */ \
	161, /* /subghz */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32wl55jc2_nucleo DT_N

/* Special property macros: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_st_stm32wl55jc2_nucleo 1
#define DT_N_STATUS_okay 1

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32wl55jc2-nucleo"}
#define DT_N_P_compatible_IDX_0 "st,stm32wl55jc2-nucleo"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Special property macros: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Special property macros: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_msi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_pll) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	4, /* /clocks/clk-hsi */ \
	5, /* /clocks/clk-lse */ \
	6, /* /clocks/clk-lsi */ \
	7, /* /clocks/clk-msi */ \
	13, /* /clocks/clk-hse */ \
	14, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Special property macros: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	3, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Special property macros: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	3, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse  DT_N_S_clocks_S_clk_lse

/* Special property macros: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lse_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	3, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Special property macros: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-msi
 *
 * Node identifier: DT_N_S_clocks_S_clk_msi
 *
 * Binding (compatible = st,stm32-msi-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-msi-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_msi_PATH "/clocks/clk-msi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_msi_FULL_NAME "clk-msi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_msi_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_msi_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_msi_REQUIRES_ORDS \
	3, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_msi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_msi_EXISTS 1
#define DT_N_INST_0_st_stm32_msi_clock DT_N_S_clocks_S_clk_msi
#define DT_N_NODELABEL_clk_msi         DT_N_S_clocks_S_clk_msi

/* Special property macros: */
#define DT_N_S_clocks_S_clk_msi_REG_NUM 0
#define DT_N_S_clocks_S_clk_msi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_msi_COMPAT_MATCHES_st_stm32_msi_clock 1
#define DT_N_S_clocks_S_clk_msi_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_msi_P_msi_range 6
#define DT_N_S_clocks_S_clk_msi_P_msi_range_ENUM_IDX 6
#define DT_N_S_clocks_S_clk_msi_P_msi_range_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_msi_pll_mode 0
#define DT_N_S_clocks_S_clk_msi_P_msi_pll_mode_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_status "disabled"
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_msi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msi, status, 0) \
	fn(DT_N_S_clocks_S_clk_msi, status, 1) \
	fn(DT_N_S_clocks_S_clk_msi, status, 2) \
	fn(DT_N_S_clocks_S_clk_msi, status, 3) \
	fn(DT_N_S_clocks_S_clk_msi, status, 4) \
	fn(DT_N_S_clocks_S_clk_msi, status, 5) \
	fn(DT_N_S_clocks_S_clk_msi, status, 6) \
	fn(DT_N_S_clocks_S_clk_msi, status, 7)
#define DT_N_S_clocks_S_clk_msi_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_compatible {"st,stm32-msi-clock"}
#define DT_N_S_clocks_S_clk_msi_P_compatible_IDX_0 "st,stm32-msi-clock"
#define DT_N_S_clocks_S_clk_msi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msi, compatible, 0)
#define DT_N_S_clocks_S_clk_msi_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_msi_P_compatible_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	9, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Special property macros: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m0+):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m0+.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	8, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m0_ DT_N_S_cpus_S_cpu_0

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m0_ 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m0+"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_btn_0) fn(DT_N_S_gpio_keys_S_btn_1) fn(DT_N_S_gpio_keys_S_btn_2)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_btn_0) fn(DT_N_S_gpio_keys_S_btn_1) fn(DT_N_S_gpio_keys_S_btn_2) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	17, /* /gpio_keys/btn_0 */ \
	18, /* /gpio_keys/btn_1 */ \
	20, /* /gpio_keys/btn_2 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Special property macros: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_58004000) fn(DT_N_S_soc_S_ipcc_58000c10) fn(DT_N_S_soc_S_rcc_58000000) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_interrupt_controller_58000800) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_58004000) fn(DT_N_S_soc_S_ipcc_58000c10) fn(DT_N_S_soc_S_rcc_58000000) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_interrupt_controller_58000800) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_serial_40008000) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	12, /* /soc/pin-controller@48000000 */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */ \
	31, /* /soc/i2c@40005400 */ \
	34, /* /soc/i2c@40005800 */ \
	35, /* /soc/i2c@40005c00 */ \
	36, /* /soc/interrupt-controller@58000800 */ \
	37, /* /soc/ipcc@58000C10 */ \
	38, /* /soc/rtc@40002800 */ \
	41, /* /soc/serial@40008000 */ \
	42, /* /soc/spi@40003800 */ \
	47, /* /soc/spi@40013000 */ \
	48, /* /soc/timer@e000e010 */ \
	49, /* /soc/timers@40007c00 */ \
	50, /* /soc/flash-controller@58004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Special property macros: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_PATH "/soc/pin-controller@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_FULL_NAME "pin-controller@48000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_SUPPORTS_ORDS \
	16, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	19, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	22, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	32, /* /soc/pin-controller@48000000/i2c2_scl_pa12 */ \
	33, /* /soc/pin-controller@48000000/i2c2_sda_pa11 */ \
	39, /* /soc/pin-controller@48000000/lpuart1_rx_pa3 */ \
	40, /* /soc/pin-controller@48000000/lpuart1_tx_pa2 */ \
	43, /* /soc/pin-controller@48000000/spi1_miso_pa6 */ \
	44, /* /soc/pin-controller@48000000/spi1_mosi_pa7 */ \
	45, /* /soc/pin-controller@48000000/spi1_nss_pa4 */ \
	46, /* /soc/pin-controller@48000000/spi1_sck_pa5 */ \
	52, /* /soc/pin-controller@48000000/adc_in0_pb13 */ \
	53, /* /soc/pin-controller@48000000/adc_in10_pa14 */ \
	54, /* /soc/pin-controller@48000000/adc_in11_pa15 */ \
	55, /* /soc/pin-controller@48000000/adc_in1_pb14 */ \
	56, /* /soc/pin-controller@48000000/adc_in2_pb3 */ \
	57, /* /soc/pin-controller@48000000/adc_in3_pb4 */ \
	58, /* /soc/pin-controller@48000000/adc_in4_pb2 */ \
	59, /* /soc/pin-controller@48000000/adc_in5_pb1 */ \
	60, /* /soc/pin-controller@48000000/adc_in6_pa10 */ \
	61, /* /soc/pin-controller@48000000/adc_in7_pa11 */ \
	62, /* /soc/pin-controller@48000000/adc_in8_pa12 */ \
	63, /* /soc/pin-controller@48000000/adc_in9_pa13 */ \
	64, /* /soc/pin-controller@48000000/dac_out1_pa10 */ \
	65, /* /soc/pin-controller@48000000/gpio@48001c00 */ \
	66, /* /soc/pin-controller@48000000/i2c1_scl_pa9 */ \
	67, /* /soc/pin-controller@48000000/i2c1_scl_pb6 */ \
	68, /* /soc/pin-controller@48000000/i2c1_scl_pb8 */ \
	69, /* /soc/pin-controller@48000000/i2c1_sda_pa10 */ \
	70, /* /soc/pin-controller@48000000/i2c1_sda_pb7 */ \
	71, /* /soc/pin-controller@48000000/i2c1_sda_pb9 */ \
	72, /* /soc/pin-controller@48000000/i2c2_scl_pb15 */ \
	73, /* /soc/pin-controller@48000000/i2c2_sda_pa15 */ \
	74, /* /soc/pin-controller@48000000/i2c3_scl_pa7 */ \
	75, /* /soc/pin-controller@48000000/i2c3_scl_pb10 */ \
	76, /* /soc/pin-controller@48000000/i2c3_scl_pb13 */ \
	77, /* /soc/pin-controller@48000000/i2c3_scl_pc0 */ \
	78, /* /soc/pin-controller@48000000/i2c3_sda_pb11 */ \
	79, /* /soc/pin-controller@48000000/i2c3_sda_pb14 */ \
	80, /* /soc/pin-controller@48000000/i2c3_sda_pb4 */ \
	81, /* /soc/pin-controller@48000000/i2c3_sda_pc1 */ \
	82, /* /soc/pin-controller@48000000/i2s2_ck_pa8 */ \
	83, /* /soc/pin-controller@48000000/i2s2_ck_pa9 */ \
	84, /* /soc/pin-controller@48000000/i2s2_ck_pb10 */ \
	85, /* /soc/pin-controller@48000000/i2s2_ck_pb13 */ \
	86, /* /soc/pin-controller@48000000/i2s2_sd_pa10 */ \
	87, /* /soc/pin-controller@48000000/i2s2_sd_pb15 */ \
	88, /* /soc/pin-controller@48000000/i2s2_sd_pc1 */ \
	89, /* /soc/pin-controller@48000000/i2s2_sd_pc3 */ \
	90, /* /soc/pin-controller@48000000/i2s2_ws_pa9 */ \
	91, /* /soc/pin-controller@48000000/i2s2_ws_pb12 */ \
	92, /* /soc/pin-controller@48000000/i2s2_ws_pb9 */ \
	93, /* /soc/pin-controller@48000000/lpuart1_cts_pa6 */ \
	94, /* /soc/pin-controller@48000000/lpuart1_cts_pb13 */ \
	95, /* /soc/pin-controller@48000000/lpuart1_rts_pa1 */ \
	96, /* /soc/pin-controller@48000000/lpuart1_rts_pb1 */ \
	97, /* /soc/pin-controller@48000000/lpuart1_rts_pb12 */ \
	98, /* /soc/pin-controller@48000000/lpuart1_rx_pb10 */ \
	99, /* /soc/pin-controller@48000000/lpuart1_rx_pc0 */ \
	100, /* /soc/pin-controller@48000000/lpuart1_tx_pb11 */ \
	101, /* /soc/pin-controller@48000000/lpuart1_tx_pc1 */ \
	102, /* /soc/pin-controller@48000000/spi1_miso_pa11 */ \
	103, /* /soc/pin-controller@48000000/spi1_miso_pb4 */ \
	104, /* /soc/pin-controller@48000000/spi1_mosi_pa12 */ \
	105, /* /soc/pin-controller@48000000/spi1_mosi_pb5 */ \
	106, /* /soc/pin-controller@48000000/spi1_nss_pa15 */ \
	107, /* /soc/pin-controller@48000000/spi1_nss_pb2 */ \
	108, /* /soc/pin-controller@48000000/spi1_sck_pa1 */ \
	109, /* /soc/pin-controller@48000000/spi1_sck_pb3 */ \
	110, /* /soc/pin-controller@48000000/spi2_miso_pa5 */ \
	111, /* /soc/pin-controller@48000000/spi2_miso_pb14 */ \
	112, /* /soc/pin-controller@48000000/spi2_miso_pc2 */ \
	113, /* /soc/pin-controller@48000000/spi2_mosi_pa10 */ \
	114, /* /soc/pin-controller@48000000/spi2_mosi_pb15 */ \
	115, /* /soc/pin-controller@48000000/spi2_mosi_pc1 */ \
	116, /* /soc/pin-controller@48000000/spi2_mosi_pc3 */ \
	117, /* /soc/pin-controller@48000000/spi2_nss_pa9 */ \
	118, /* /soc/pin-controller@48000000/spi2_nss_pb12 */ \
	119, /* /soc/pin-controller@48000000/spi2_nss_pb9 */ \
	120, /* /soc/pin-controller@48000000/spi2_sck_pa8 */ \
	121, /* /soc/pin-controller@48000000/spi2_sck_pa9 */ \
	122, /* /soc/pin-controller@48000000/spi2_sck_pb10 */ \
	123, /* /soc/pin-controller@48000000/spi2_sck_pb13 */ \
	124, /* /soc/pin-controller@48000000/tim16_ch1_pa6 */ \
	125, /* /soc/pin-controller@48000000/tim16_ch1_pb8 */ \
	126, /* /soc/pin-controller@48000000/tim16_ch1n_pb6 */ \
	127, /* /soc/pin-controller@48000000/tim17_ch1_pa7 */ \
	128, /* /soc/pin-controller@48000000/tim17_ch1_pb9 */ \
	129, /* /soc/pin-controller@48000000/tim17_ch1n_pb7 */ \
	130, /* /soc/pin-controller@48000000/tim1_ch1_pa8 */ \
	131, /* /soc/pin-controller@48000000/tim1_ch1n_pa7 */ \
	132, /* /soc/pin-controller@48000000/tim1_ch1n_pb13 */ \
	133, /* /soc/pin-controller@48000000/tim1_ch2_pa9 */ \
	134, /* /soc/pin-controller@48000000/tim1_ch2n_pb14 */ \
	135, /* /soc/pin-controller@48000000/tim1_ch2n_pb8 */ \
	136, /* /soc/pin-controller@48000000/tim1_ch3_pa10 */ \
	137, /* /soc/pin-controller@48000000/tim1_ch3n_pb15 */ \
	138, /* /soc/pin-controller@48000000/tim1_ch3n_pb9 */ \
	139, /* /soc/pin-controller@48000000/tim1_ch4_pa11 */ \
	140, /* /soc/pin-controller@48000000/tim2_ch1_pa0 */ \
	141, /* /soc/pin-controller@48000000/tim2_ch1_pa15 */ \
	142, /* /soc/pin-controller@48000000/tim2_ch1_pa5 */ \
	143, /* /soc/pin-controller@48000000/tim2_ch2_pa1 */ \
	144, /* /soc/pin-controller@48000000/tim2_ch2_pb3 */ \
	145, /* /soc/pin-controller@48000000/tim2_ch3_pa2 */ \
	146, /* /soc/pin-controller@48000000/tim2_ch3_pb10 */ \
	147, /* /soc/pin-controller@48000000/tim2_ch4_pa3 */ \
	148, /* /soc/pin-controller@48000000/tim2_ch4_pb11 */ \
	149, /* /soc/pin-controller@48000000/usart1_cts_pa11 */ \
	150, /* /soc/pin-controller@48000000/usart1_cts_pb4 */ \
	151, /* /soc/pin-controller@48000000/usart1_rts_pa12 */ \
	152, /* /soc/pin-controller@48000000/usart1_rts_pb3 */ \
	153, /* /soc/pin-controller@48000000/usart1_rx_pa10 */ \
	154, /* /soc/pin-controller@48000000/usart1_rx_pb7 */ \
	155, /* /soc/pin-controller@48000000/usart1_tx_pa9 */ \
	156, /* /soc/pin-controller@48000000/usart1_tx_pb6 */ \
	157, /* /soc/pin-controller@48000000/usart2_cts_pa0 */ \
	158, /* /soc/pin-controller@48000000/usart2_rts_pa1 */ \
	159, /* /soc/pin-controller@48000000/usart2_rx_pa3 */ \
	160, /* /soc/pin-controller@48000000/usart2_tx_pa2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_48000000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_48000000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_48000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_P_reg {1207959552 /* 0x48000000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	3, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS \
	14, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Special property macros: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency 32000000
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32wb-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32wb-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	3, /* /clocks */ \
	13, /* /clocks/clk-hse */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	15, /* /soc/rcc@58000000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32wb_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Special property macros: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32wb_pll_clock 1
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hse
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 2
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 6
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_r 2
#define DT_N_S_clocks_S_pll_P_div_r_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0) \
	fn(DT_N_S_clocks_S_pll, status, 1) \
	fn(DT_N_S_clocks_S_pll, status, 2) \
	fn(DT_N_S_clocks_S_pll, status, 3)
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32wb-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32wb-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/rcc@58000000
 *
 * Node identifier: DT_N_S_soc_S_rcc_58000000
 *
 * Binding (compatible = st,stm32wl-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32wl-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_58000000_PATH "/soc/rcc@58000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_58000000_FULL_NAME "rcc@58000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_58000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rcc_58000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_58000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_58000000_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_58000000_REQUIRES_ORDS \
	11, /* /soc */ \
	14, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_58000000_SUPPORTS_ORDS \
	16, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	19, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	22, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	31, /* /soc/i2c@40005400 */ \
	34, /* /soc/i2c@40005800 */ \
	35, /* /soc/i2c@40005c00 */ \
	37, /* /soc/ipcc@58000C10 */ \
	38, /* /soc/rtc@40002800 */ \
	41, /* /soc/serial@40008000 */ \
	42, /* /soc/spi@40003800 */ \
	47, /* /soc/spi@40013000 */ \
	49, /* /soc/timers@40007c00 */ \
	65, /* /soc/pin-controller@48000000/gpio@48001c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_58000000_EXISTS 1
#define DT_N_INST_0_st_stm32wl_rcc DT_N_S_soc_S_rcc_58000000
#define DT_N_NODELABEL_rcc         DT_N_S_soc_S_rcc_58000000

/* Special property macros: */
#define DT_N_S_soc_S_rcc_58000000_REG_NUM 1
#define DT_N_S_soc_S_rcc_58000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_REG_IDX_0_VAL_ADDRESS 1476395008 /* 0x58000000 */
#define DT_N_S_soc_S_rcc_58000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_58000000_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_58000000_COMPAT_MATCHES_st_stm32wl_rcc 1
#define DT_N_S_soc_S_rcc_58000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_58000000_P_ahb3_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_ahb3_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_ahb3_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_cpu1_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_cpu1_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_cpu1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_cpu2_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_cpu2_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_cpu2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_reg {1476395008 /* 0x58000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_58000000_P_reg_IDX_0 1476395008
#define DT_N_S_soc_S_rcc_58000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_58000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_58000000, reg, 0) \
	fn(DT_N_S_soc_S_rcc_58000000, reg, 1)
#define DT_N_S_soc_S_rcc_58000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_clock_frequency 48000000
#define DT_N_S_soc_S_rcc_58000000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_apb1_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_apb1_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_apb2_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_apb2_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_compatible {"st,stm32wl-rcc"}
#define DT_N_S_soc_S_rcc_58000000_P_compatible_IDX_0 "st,stm32wl-rcc"
#define DT_N_S_soc_S_rcc_58000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_58000000, compatible, 0)
#define DT_N_S_soc_S_rcc_58000000_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_58000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_label "STM32_CLK_RCC"
#define DT_N_S_soc_S_rcc_58000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_58000000, label, 0) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 1) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 2) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 3) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 4) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 5) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 6) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 7) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 8) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 9) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 10) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 11) \
	fn(DT_N_S_soc_S_rcc_58000000, label, 12)
#define DT_N_S_soc_S_rcc_58000000_P_label_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_58000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_58000000, clocks, 0)
#define DT_N_S_soc_S_rcc_58000000_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_58000000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PATH "/soc/pin-controller@48000000/gpio@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FULL_NAME "gpio@48000000"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */ \
	15, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_SUPPORTS_ORDS \
	17, /* /gpio_keys/btn_0 */ \
	18, /* /gpio_keys/btn_1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg {1207959552 /* 0x48000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label "GPIOA"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /gpio_keys/btn_0
 *
 * Node identifier: DT_N_S_gpio_keys_S_btn_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_btn_0_PATH "/gpio_keys/btn_0"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_btn_0_FULL_NAME "btn_0"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_btn_0_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_btn_0_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_btn_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_btn_0_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_btn_0_REQUIRES_ORDS \
	10, /* /gpio_keys */ \
	16, /* /soc/pin-controller@48000000/gpio@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_btn_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_btn_0_EXISTS 1
#define DT_N_ALIAS_sw0      DT_N_S_gpio_keys_S_btn_0
#define DT_N_NODELABEL_btn0 DT_N_S_gpio_keys_S_btn_0

/* Special property macros: */
#define DT_N_S_gpio_keys_S_btn_0_REG_NUM 0
#define DT_N_S_gpio_keys_S_btn_0_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_btn_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_btn_0, gpios, 0)
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_btn_0_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_0_P_label "BTN_0"
#define DT_N_S_gpio_keys_S_btn_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_btn_0, label, 0) \
	fn(DT_N_S_gpio_keys_S_btn_0, label, 1) \
	fn(DT_N_S_gpio_keys_S_btn_0, label, 2) \
	fn(DT_N_S_gpio_keys_S_btn_0, label, 3) \
	fn(DT_N_S_gpio_keys_S_btn_0, label, 4)
#define DT_N_S_gpio_keys_S_btn_0_P_label_EXISTS 1

/*
 * Devicetree node: /gpio_keys/btn_1
 *
 * Node identifier: DT_N_S_gpio_keys_S_btn_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_btn_1_PATH "/gpio_keys/btn_1"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_btn_1_FULL_NAME "btn_1"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_btn_1_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_btn_1_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_btn_1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_btn_1_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_btn_1_REQUIRES_ORDS \
	10, /* /gpio_keys */ \
	16, /* /soc/pin-controller@48000000/gpio@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_btn_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_btn_1_EXISTS 1
#define DT_N_ALIAS_sw1      DT_N_S_gpio_keys_S_btn_1
#define DT_N_NODELABEL_btn1 DT_N_S_gpio_keys_S_btn_1

/* Special property macros: */
#define DT_N_S_gpio_keys_S_btn_1_REG_NUM 0
#define DT_N_S_gpio_keys_S_btn_1_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_btn_1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_IDX_0_VAL_pin 1
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_btn_1, gpios, 0)
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_btn_1_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_1_P_label "BTN_1"
#define DT_N_S_gpio_keys_S_btn_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_btn_1, label, 0) \
	fn(DT_N_S_gpio_keys_S_btn_1, label, 1) \
	fn(DT_N_S_gpio_keys_S_btn_1, label, 2) \
	fn(DT_N_S_gpio_keys_S_btn_1, label, 3) \
	fn(DT_N_S_gpio_keys_S_btn_1, label, 4)
#define DT_N_S_gpio_keys_S_btn_1_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PATH "/soc/pin-controller@48000000/gpio@48000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FULL_NAME "gpio@48000800"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */ \
	15, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_SUPPORTS_ORDS \
	20, /* /gpio_keys/btn_2 */ \
	162, /* /subghz/pin_0 */ \
	163, /* /subghz/pin_1 */ \
	164, /* /subghz/pin_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_ADDRESS 1207961600 /* 0x48000800 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg {1207961600 /* 0x48000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0 1207961600
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label "GPIOC"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_EXISTS 1

/*
 * Devicetree node: /gpio_keys/btn_2
 *
 * Node identifier: DT_N_S_gpio_keys_S_btn_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_btn_2_PATH "/gpio_keys/btn_2"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_btn_2_FULL_NAME "btn_2"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_btn_2_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_btn_2_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_btn_2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_btn_2_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_btn_2_REQUIRES_ORDS \
	10, /* /gpio_keys */ \
	19, /* /soc/pin-controller@48000000/gpio@48000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_btn_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_btn_2_EXISTS 1
#define DT_N_ALIAS_sw2      DT_N_S_gpio_keys_S_btn_2
#define DT_N_NODELABEL_btn2 DT_N_S_gpio_keys_S_btn_2

/* Special property macros: */
#define DT_N_S_gpio_keys_S_btn_2_REG_NUM 0
#define DT_N_S_gpio_keys_S_btn_2_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_btn_2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_IDX_0_VAL_pin 6
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_btn_2, gpios, 0)
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_btn_2_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_2_P_label "BTN_2"
#define DT_N_S_gpio_keys_S_btn_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_btn_2, label, 0) \
	fn(DT_N_S_gpio_keys_S_btn_2, label, 1) \
	fn(DT_N_S_gpio_keys_S_btn_2, label, 2) \
	fn(DT_N_S_gpio_keys_S_btn_2, label, 3) \
	fn(DT_N_S_gpio_keys_S_btn_2, label, 4)
#define DT_N_S_gpio_keys_S_btn_2_P_label_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	23, /* /leds/led_0 */ \
	24, /* /leds/led_1 */ \
	25, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Special property macros: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PATH "/soc/pin-controller@48000000/gpio@48000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FULL_NAME "gpio@48000400"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */ \
	15, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_SUPPORTS_ORDS \
	23, /* /leds/led_0 */ \
	24, /* /leds/led_1 */ \
	25, /* /leds/led_2 */ \
	165, /* /subghz/pin_3 */ \
	166, /* /subghz/pin_4 */ \
	167, /* /subghz/pin_5 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_ADDRESS 1207960576 /* 0x48000400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg {1207960576 /* 0x48000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0 1207960576
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label "GPIOB"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	21, /* /leds */ \
	22, /* /soc/pin-controller@48000000/gpio@48000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_NODELABEL_blue_led_1 DT_N_S_leds_S_led_0

/* Special property macros: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "LED_0"
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0) \
	fn(DT_N_S_leds_S_led_0, label, 1) \
	fn(DT_N_S_leds_S_led_0, label, 2) \
	fn(DT_N_S_leds_S_led_0, label, 3) \
	fn(DT_N_S_leds_S_led_0, label, 4)
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	21, /* /leds */ \
	22, /* /soc/pin-controller@48000000/gpio@48000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led_2 DT_N_S_leds_S_led_1

/* Special property macros: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 9
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "LED_1"
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0) \
	fn(DT_N_S_leds_S_led_1, label, 1) \
	fn(DT_N_S_leds_S_led_1, label, 2) \
	fn(DT_N_S_leds_S_led_1, label, 3) \
	fn(DT_N_S_leds_S_led_1, label, 4)
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	21, /* /leds */ \
	22, /* /soc/pin-controller@48000000/gpio@48000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_NODELABEL_green_led_3 DT_N_S_leds_S_led_2

/* Special property macros: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 11
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "LED_2"
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0) \
	fn(DT_N_S_leds_S_led_2, label, 1) \
	fn(DT_N_S_leds_S_led_2, label, 2) \
	fn(DT_N_S_leds_S_led_2, label, 3) \
	fn(DT_N_S_leds_S_led_2, label, 4)
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) fn(DT_N_S_memory_20000000_S_partitions)
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_memory_20000000_S_partitions) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS \
	27, /* /memory@20000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Special property macros: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536903680 /* 0x20008000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536903680 /* 0x20008000 */, 32768 /* 0x8000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536903680
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 32768
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, reg, 0) \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /memory@20000000/partitions
 *
 * Node identifier: DT_N_S_memory_20000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_S_partitions_PATH "/memory@20000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_S_partitions_FULL_NAME "partitions"

/* Node parent (/memory@20000000) identifier: */
#define DT_N_S_memory_20000000_S_partitions_PARENT DT_N_S_memory_20000000
#define DT_N_S_memory_20000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00) fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00)
#define DT_N_S_memory_20000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00) fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_S_partitions_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_S_partitions_REQUIRES_ORDS \
	26, /* /memory@20000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_S_partitions_SUPPORTS_ORDS \
	28, /* /memory@20000000/partitions/partition@2000fe00 */ \
	29, /* /memory@20000000/partitions/partition@2000ff00 */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_memory_20000000_S_partitions

/* Special property macros: */
#define DT_N_S_memory_20000000_S_partitions_REG_NUM 0
#define DT_N_S_memory_20000000_S_partitions_IRQ_NUM 0
#define DT_N_S_memory_20000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_memory_20000000_S_partitions_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /memory@20000000/partitions/partition@2000fe00
 *
 * Node identifier: DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_PATH "/memory@20000000/partitions/partition@2000fe00"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_FULL_NAME "partition@2000fe00"

/* Node parent (/memory@20000000/partitions) identifier: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_PARENT DT_N_S_memory_20000000_S_partitions
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_REQUIRES_ORDS \
	27, /* /memory@20000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_EXISTS 1
#define DT_N_NODELABEL_send_partition DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00

/* Special property macros: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_REG_NUM 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_REG_IDX_0_VAL_ADDRESS 536935936 /* 0x2000fe00 */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_IRQ_NUM 0
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_STATUS_okay 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_label "send_storage"
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 0) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 1) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 2) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 3) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 4) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 5) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 6) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 7) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 8) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 9) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 10) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, label, 11)
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_label_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_read_only 0
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_read_only_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_reg {536935936 /* 0x2000fe00 */, 256 /* 0x100 */}
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_reg_IDX_0 536935936
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_reg_IDX_1 256
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, reg, 0) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00, reg, 1)
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00_P_reg_EXISTS 1

/*
 * Devicetree node: /memory@20000000/partitions/partition@2000ff00
 *
 * Node identifier: DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_PATH "/memory@20000000/partitions/partition@2000ff00"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_FULL_NAME "partition@2000ff00"

/* Node parent (/memory@20000000/partitions) identifier: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_PARENT DT_N_S_memory_20000000_S_partitions
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_REQUIRES_ORDS \
	27, /* /memory@20000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_EXISTS 1
#define DT_N_NODELABEL_recv_partition DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00

/* Special property macros: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_REG_NUM 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_REG_IDX_0_VAL_ADDRESS 536936192 /* 0x2000ff00 */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_IRQ_NUM 0
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_STATUS_okay 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_label "recv_storage"
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 0) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 1) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 2) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 3) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 4) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 5) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 6) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 7) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 8) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 9) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 10) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, label, 11)
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_label_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_read_only 0
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_read_only_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_reg {536936192 /* 0x2000ff00 */, 256 /* 0x100 */}
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_reg_IDX_0 536936192
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_reg_IDX_1 256
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, reg, 0) \
	fn(DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00, reg, 1)
#define DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v6m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v6m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	31, /* /soc/i2c@40005400 */ \
	34, /* /soc/i2c@40005800 */ \
	35, /* /soc/i2c@40005c00 */ \
	37, /* /soc/ipcc@58000C10 */ \
	38, /* /soc/rtc@40002800 */ \
	41, /* /soc/serial@40008000 */ \
	42, /* /soc/spi@40003800 */ \
	47, /* /soc/spi@40013000 */ \
	49, /* /soc/timers@40007c00 */ \
	50, /* /soc/flash-controller@58004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v6m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Special property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v6m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 2
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v6m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1)
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_40005400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 4)
#define DT_N_S_soc_S_i2c_40005400_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 4) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 5) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 6) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 7)
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c2_scl_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_PATH "/soc/pin-controller@48000000/i2c2_scl_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_FULL_NAME "i2c2_scl_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_SUPPORTS_ORDS \
	34, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pa12 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_pinmux 3076
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c2_sda_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_PATH "/soc/pin-controller@48000000/i2c2_sda_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_FULL_NAME "i2c2_sda_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_SUPPORTS_ORDS \
	34, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pa11 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_pinmux 2820
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */ \
	32, /* /soc/pin-controller@48000000/i2c2_scl_pa12 */ \
	33, /* /soc/pin-controller@48000000/i2c2_sda_pa11 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1)
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {23 /* 0x17 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pa12
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa11
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_label "I2C_2"
#define DT_N_S_soc_S_i2c_40005800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 4)
#define DT_N_S_soc_S_i2c_40005800_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 4) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 5) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 6) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 7)
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005c00
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005c00_PATH "/soc/i2c@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005c00_FULL_NAME "i2c@40005c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005c00_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005c00_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005c00_EXISTS 1
#define DT_N_INST_2_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005c00
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_40005c00

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_label "I2C_3"
#define DT_N_S_soc_S_i2c_40005c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 4)
#define DT_N_S_soc_S_i2c_40005c00_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 4) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 5) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 6) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 7)
#define DT_N_S_soc_S_i2c_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names {"event"}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@58000800
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_58000800
 *
 * Binding (compatible = st,stm32-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/st,stm32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_58000800_PATH "/soc/interrupt-controller@58000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_58000800_FULL_NAME "interrupt-controller@58000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_58000800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_58000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_58000800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_58000800_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_58000800_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_58000800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_58000800_EXISTS 1
#define DT_N_INST_0_st_stm32_exti DT_N_S_soc_S_interrupt_controller_58000800
#define DT_N_NODELABEL_exti       DT_N_S_soc_S_interrupt_controller_58000800

/* Special property macros: */
#define DT_N_S_soc_S_interrupt_controller_58000800_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_58000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_REG_IDX_0_VAL_ADDRESS 1476397056 /* 0x58000800 */
#define DT_N_S_soc_S_interrupt_controller_58000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_58000800_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_58000800_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_58000800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg {1476397056 /* 0x58000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_IDX_0 1476397056
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_58000800, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_58000800, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible {"st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_IDX_0 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_58000800, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/ipcc@58000C10
 *
 * Node identifier: DT_N_S_soc_S_ipcc_58000c10
 *
 * Binding (compatible = st,stm32-ipcc-mailbox):
 *   $ZEPHYR_BASE/dts/bindings/ipm/st,stm32-ipcc-mailbox.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ipcc_58000c10_PATH "/soc/ipcc@58000C10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ipcc_58000c10_FULL_NAME "ipcc@58000C10"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ipcc_58000c10_PARENT DT_N_S_soc
#define DT_N_S_soc_S_ipcc_58000c10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ipcc_58000c10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ipcc_58000c10_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ipcc_58000c10_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ipcc_58000c10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ipcc_58000c10_EXISTS 1
#define DT_N_INST_0_st_stm32_ipcc_mailbox DT_N_S_soc_S_ipcc_58000c10
#define DT_N_NODELABEL_ipcc               DT_N_S_soc_S_ipcc_58000c10

/* Special property macros: */
#define DT_N_S_soc_S_ipcc_58000c10_REG_NUM 1
#define DT_N_S_soc_S_ipcc_58000c10_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_REG_IDX_0_VAL_ADDRESS 1476398096 /* 0x58000c10 */
#define DT_N_S_soc_S_ipcc_58000c10_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_NUM 1
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_NAME_rxo_txf_VAL_irq DT_N_S_soc_S_ipcc_58000c10_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_NAME_rxo_txf_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_NAME_rxo_txf_VAL_priority DT_N_S_soc_S_ipcc_58000c10_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_ipcc_58000c10_IRQ_NAME_rxo_txf_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_COMPAT_MATCHES_st_stm32_ipcc_mailbox 1
#define DT_N_S_soc_S_ipcc_58000c10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_IDX_0_VAL_bus 6
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipcc_58000c10, clocks, 0)
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_LEN 1
#define DT_N_S_soc_S_ipcc_58000c10_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_buffer {536870912 /* 0x20000000 */, 255 /* 0xff */}
#define DT_N_S_soc_S_ipcc_58000c10_P_buffer_IDX_0 536870912
#define DT_N_S_soc_S_ipcc_58000c10_P_buffer_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_buffer_IDX_1 255
#define DT_N_S_soc_S_ipcc_58000c10_P_buffer_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_buffer_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipcc_58000c10, buffer, 0) \
	fn(DT_N_S_soc_S_ipcc_58000c10, buffer, 1)
#define DT_N_S_soc_S_ipcc_58000c10_P_buffer_LEN 2
#define DT_N_S_soc_S_ipcc_58000c10_P_buffer_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_status "okay"
#define DT_N_S_soc_S_ipcc_58000c10_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ipcc_58000c10_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ipcc_58000c10_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ipcc_58000c10_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipcc_58000c10, status, 0) \
	fn(DT_N_S_soc_S_ipcc_58000c10, status, 1) \
	fn(DT_N_S_soc_S_ipcc_58000c10, status, 2) \
	fn(DT_N_S_soc_S_ipcc_58000c10, status, 3)
#define DT_N_S_soc_S_ipcc_58000c10_P_status_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_compatible {"st,stm32-ipcc-mailbox"}
#define DT_N_S_soc_S_ipcc_58000c10_P_compatible_IDX_0 "st,stm32-ipcc-mailbox"
#define DT_N_S_soc_S_ipcc_58000c10_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipcc_58000c10, compatible, 0)
#define DT_N_S_soc_S_ipcc_58000c10_P_compatible_LEN 1
#define DT_N_S_soc_S_ipcc_58000c10_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_reg {1476398096 /* 0x58000c10 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_ipcc_58000c10_P_reg_IDX_0 1476398096
#define DT_N_S_soc_S_ipcc_58000c10_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_reg_IDX_1 16
#define DT_N_S_soc_S_ipcc_58000c10_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipcc_58000c10, reg, 0) \
	fn(DT_N_S_soc_S_ipcc_58000c10, reg, 1)
#define DT_N_S_soc_S_ipcc_58000c10_P_reg_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipcc_58000c10, interrupts, 0) \
	fn(DT_N_S_soc_S_ipcc_58000c10, interrupts, 1)
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupt_names {"rxo_txf"}
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupt_names_IDX_0 "rxo_txf"
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipcc_58000c10, interrupt_names, 0)
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_ipcc_58000c10_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_ipcc_58000c10_P_label "IPCC"
#define DT_N_S_soc_S_ipcc_58000c10_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipcc_58000c10, label, 0) \
	fn(DT_N_S_soc_S_ipcc_58000c10, label, 1) \
	fn(DT_N_S_soc_S_ipcc_58000c10, label, 2) \
	fn(DT_N_S_soc_S_ipcc_58000c10, label, 3)
#define DT_N_S_soc_S_ipcc_58000c10_P_label_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Special property macros: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1)
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_40002800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, label, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 3) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 4)
#define DT_N_S_soc_S_rtc_40002800_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {2 /* 0x2 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "disabled"
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 4) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 5) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 6) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 7)
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rx_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_PATH "/soc/pin-controller@48000000/lpuart1_rx_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FULL_NAME "lpuart1_rx_pa3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_SUPPORTS_ORDS \
	41, /* /soc/serial@40008000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rx_pa3 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_pinmux 776
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_tx_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_PATH "/soc/pin-controller@48000000/lpuart1_tx_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FULL_NAME "lpuart1_tx_pa2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_SUPPORTS_ORDS \
	41, /* /soc/serial@40008000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_EXISTS 1
#define DT_N_NODELABEL_lpuart1_tx_pa2 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_pinmux 520
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/serial@40008000
 *
 * Node identifier: DT_N_S_soc_S_serial_40008000
 *
 * Binding (compatible = st,stm32-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40008000_PATH "/soc/serial@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40008000_FULL_NAME "serial@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40008000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40008000_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40008000_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */ \
	39, /* /soc/pin-controller@48000000/lpuart1_rx_pa3 */ \
	40, /* /soc/pin-controller@48000000/lpuart1_tx_pa2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40008000_EXISTS 1
#define DT_N_INST_0_st_stm32_lpuart DT_N_S_soc_S_serial_40008000
#define DT_N_INST_0_st_stm32_uart   DT_N_S_soc_S_serial_40008000
#define DT_N_NODELABEL_lpuart1      DT_N_S_soc_S_serial_40008000

/* Special property macros: */
#define DT_N_S_soc_S_serial_40008000_REG_NUM 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_lpuart 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40008000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40008000_P_reg {1073774592 /* 0x40008000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40008000, reg, 1)
#define DT_N_S_soc_S_serial_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40008000, interrupts, 1)
#define DT_N_S_soc_S_serial_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus 4
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, clocks, 0)
#define DT_N_S_soc_S_serial_40008000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40008000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40008000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_label "LPUART_1"
#define DT_N_S_soc_S_serial_40008000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, label, 0) \
	fn(DT_N_S_soc_S_serial_40008000, label, 1) \
	fn(DT_N_S_soc_S_serial_40008000, label, 2) \
	fn(DT_N_S_soc_S_serial_40008000, label, 3) \
	fn(DT_N_S_soc_S_serial_40008000, label, 4) \
	fn(DT_N_S_soc_S_serial_40008000, label, 5) \
	fn(DT_N_S_soc_S_serial_40008000, label, 6) \
	fn(DT_N_S_soc_S_serial_40008000, label, 7)
#define DT_N_S_soc_S_serial_40008000_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status "okay"
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, status, 0) \
	fn(DT_N_S_soc_S_serial_40008000, status, 1) \
	fn(DT_N_S_soc_S_serial_40008000, status, 2) \
	fn(DT_N_S_soc_S_serial_40008000, status, 3)
#define DT_N_S_soc_S_serial_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible {"st,stm32-lpuart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0 "st,stm32-lpuart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1)
#define DT_N_S_soc_S_serial_40008000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40008000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_40003800

/* Special property macros: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1)
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {26 /* 0x1a */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_label "SPI_2"
#define DT_N_S_soc_S_spi_40003800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, label, 0) \
	fn(DT_N_S_soc_S_spi_40003800, label, 1) \
	fn(DT_N_S_soc_S_spi_40003800, label, 2) \
	fn(DT_N_S_soc_S_spi_40003800, label, 3) \
	fn(DT_N_S_soc_S_spi_40003800, label, 4)
#define DT_N_S_soc_S_spi_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7)
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_miso_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PATH "/soc/pin-controller@48000000/spi1_miso_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FULL_NAME "spi1_miso_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_SUPPORTS_ORDS \
	47, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pa6 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_pinmux 1541
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_mosi_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PATH "/soc/pin-controller@48000000/spi1_mosi_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FULL_NAME "spi1_mosi_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_SUPPORTS_ORDS \
	47, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pa7 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_pinmux 1797
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_nss_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_PATH "/soc/pin-controller@48000000/spi1_nss_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FULL_NAME "spi1_nss_pa4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_SUPPORTS_ORDS \
	47, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa4 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_pinmux 1029
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_sck_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PATH "/soc/pin-controller@48000000/spi1_sck_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FULL_NAME "spi1_sck_pa5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_SUPPORTS_ORDS \
	47, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa5 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_pinmux 1285
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */ \
	43, /* /soc/pin-controller@48000000/spi1_miso_pa6 */ \
	44, /* /soc/pin-controller@48000000/spi1_mosi_pa7 */ \
	45, /* /soc/pin-controller@48000000/spi1_nss_pa4 */ \
	46, /* /soc/pin-controller@48000000/spi1_sck_pa5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi_fifo DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi      DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1           DT_N_S_soc_S_spi_40013000

/* Special property macros: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1)
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {25 /* 0x19 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_40013000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, label, 0) \
	fn(DT_N_S_soc_S_spi_40013000, label, 1) \
	fn(DT_N_S_soc_S_spi_40013000, label, 2) \
	fn(DT_N_S_soc_S_spi_40013000, label, 3) \
	fn(DT_N_S_soc_S_spi_40013000, label, 4)
#define DT_N_S_soc_S_spi_40013000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3) \
	fn(DT_N_S_soc_S_spi_40013000, status, 4) \
	fn(DT_N_S_soc_S_spi_40013000, status, 5) \
	fn(DT_N_S_soc_S_spi_40013000, status, 6) \
	fn(DT_N_S_soc_S_spi_40013000, status, 7)
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv6m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Special property macros: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv6m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv6m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/timers@40007c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40007c00
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40007c00_PATH "/soc/timers@40007c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40007c00_FULL_NAME "timers@40007c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40007c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40007c00_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40007c00_REQUIRES_ORDS \
	11, /* /soc */ \
	15, /* /soc/rcc@58000000 */ \
	30, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40007c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40007c00_EXISTS 1
#define DT_N_INST_0_st_stm32_lptim DT_N_S_soc_S_timers_40007c00
#define DT_N_NODELABEL_lptim1      DT_N_S_soc_S_timers_40007c00

/* Special property macros: */
#define DT_N_S_soc_S_timers_40007c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_VAL_ADDRESS 1073773568 /* 0x40007c00 */
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40007c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_40007c00_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40007c00_P_label "LPTIM_1"
#define DT_N_S_soc_S_timers_40007c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, label, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 1) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 2) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 3) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 4) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 5) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 6)
#define DT_N_S_soc_S_timers_40007c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg {1073773568 /* 0x40007c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_0 1073773568
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, reg, 1)
#define DT_N_S_soc_S_timers_40007c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bits 1207959552
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts {11 /* 0xb */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_status "okay"
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 3)
#define DT_N_S_soc_S_timers_40007c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_PATH "/soc/flash-controller@58004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_FULL_NAME "flash-controller@58004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_flash_controller_58004000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_58004000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_REQUIRES_ORDS \
	11, /* /soc */ \
	30, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_SUPPORTS_ORDS \
	51, /* /soc/flash-controller@58004000/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_58004000
#define DT_N_INST_0_st_stm32wl_flash_controller DT_N_S_soc_S_flash_controller_58004000
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_58004000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_REG_IDX_0_VAL_ADDRESS 1476411392 /* 0x58004000 */
#define DT_N_S_soc_S_flash_controller_58004000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_58004000_COMPAT_MATCHES_st_stm32wl_flash_controller 1
#define DT_N_S_soc_S_flash_controller_58004000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_P_label "FLASH_CTRL"
#define DT_N_S_soc_S_flash_controller_58004000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 9)
#define DT_N_S_soc_S_flash_controller_58004000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_reg {1476411392 /* 0x58004000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_IDX_0 1476411392
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible {"st,stm32-flash-controller", "st,stm32wl-flash-controller"}
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_IDX_1 "st,stm32wl-flash-controller"
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts {3 /* 0x3 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, interrupts, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000, interrupts, 1)
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_PATH "/soc/flash-controller@58004000/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@58004000) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_58004000
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REQUIRES_ORDS \
	50, /* /soc/flash-controller@58004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134348800 /* 0x8020000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label "FLASH_STM32"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 10)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_erase_block_size 2048
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_write_block_size 8
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg {134348800 /* 0x8020000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_IDX_0 134348800
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in0_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_PATH "/soc/pin-controller@48000000/adc_in0_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_FULL_NAME "adc_in0_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_EXISTS 1
#define DT_N_NODELABEL_adc_in0_pb13 DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_pinmux 7440
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in0_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in10_pa14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_PATH "/soc/pin-controller@48000000/adc_in10_pa14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_FULL_NAME "adc_in10_pa14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_EXISTS 1
#define DT_N_NODELABEL_adc_in10_pa14 DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_pinmux 3600
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in10_pa14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in11_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_PATH "/soc/pin-controller@48000000/adc_in11_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_FULL_NAME "adc_in11_pa15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_EXISTS 1
#define DT_N_NODELABEL_adc_in11_pa15 DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_pinmux 3856
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in11_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in1_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_PATH "/soc/pin-controller@48000000/adc_in1_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_FULL_NAME "adc_in1_pb14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_EXISTS 1
#define DT_N_NODELABEL_adc_in1_pb14 DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_pinmux 7696
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in1_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in2_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_PATH "/soc/pin-controller@48000000/adc_in2_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_FULL_NAME "adc_in2_pb3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_EXISTS 1
#define DT_N_NODELABEL_adc_in2_pb3 DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_pinmux 4880
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in2_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in3_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_PATH "/soc/pin-controller@48000000/adc_in3_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_FULL_NAME "adc_in3_pb4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_EXISTS 1
#define DT_N_NODELABEL_adc_in3_pb4 DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_pinmux 5136
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in3_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in4_pb2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_PATH "/soc/pin-controller@48000000/adc_in4_pb2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_FULL_NAME "adc_in4_pb2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_EXISTS 1
#define DT_N_NODELABEL_adc_in4_pb2 DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_pinmux 4624
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in4_pb2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in5_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_PATH "/soc/pin-controller@48000000/adc_in5_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_FULL_NAME "adc_in5_pb1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_EXISTS 1
#define DT_N_NODELABEL_adc_in5_pb1 DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_pinmux 4368
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in5_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in6_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_PATH "/soc/pin-controller@48000000/adc_in6_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_FULL_NAME "adc_in6_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_EXISTS 1
#define DT_N_NODELABEL_adc_in6_pa10 DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_pinmux 2576
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in6_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in7_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_PATH "/soc/pin-controller@48000000/adc_in7_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_FULL_NAME "adc_in7_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_EXISTS 1
#define DT_N_NODELABEL_adc_in7_pa11 DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_pinmux 2832
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in7_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in8_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_PATH "/soc/pin-controller@48000000/adc_in8_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_FULL_NAME "adc_in8_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_EXISTS 1
#define DT_N_NODELABEL_adc_in8_pa12 DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_pinmux 3088
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in8_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc_in9_pa13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_PATH "/soc/pin-controller@48000000/adc_in9_pa13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_FULL_NAME "adc_in9_pa13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_EXISTS 1
#define DT_N_NODELABEL_adc_in9_pa13 DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_pinmux 3344
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc_in9_pa13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/dac_out1_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_PATH "/soc/pin-controller@48000000/dac_out1_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_FULL_NAME "dac_out1_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_EXISTS 1
#define DT_N_NODELABEL_dac_out1_pa10 DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_pinmux 2576
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac_out1_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_PATH "/soc/pin-controller@48000000/gpio@48001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FULL_NAME "gpio@48001c00"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */ \
	15, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_VAL_ADDRESS 1207966720 /* 0x48001c00 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg {1207966720 /* 0x48001c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_0 1207966720
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label "GPIOH"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_scl_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_PATH "/soc/pin-controller@48000000/i2c1_scl_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FULL_NAME "i2c1_scl_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pa9 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_pinmux 2308
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_scl_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_PATH "/soc/pin-controller@48000000/i2c1_scl_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FULL_NAME "i2c1_scl_pb6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb6 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_pinmux 5636
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_scl_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_PATH "/soc/pin-controller@48000000/i2c1_scl_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FULL_NAME "i2c1_scl_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb8 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_pinmux 6148
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_sda_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_PATH "/soc/pin-controller@48000000/i2c1_sda_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FULL_NAME "i2c1_sda_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pa10 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_pinmux 2564
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_sda_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_PATH "/soc/pin-controller@48000000/i2c1_sda_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FULL_NAME "i2c1_sda_pb7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb7 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_pinmux 5892
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@48000000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_pinmux 6404
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c2_scl_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_PATH "/soc/pin-controller@48000000/i2c2_scl_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_FULL_NAME "i2c2_scl_pb15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pb15 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_pinmux 7940
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c2_sda_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_PATH "/soc/pin-controller@48000000/i2c2_sda_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_FULL_NAME "i2c2_sda_pa15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pa15 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_pinmux 3844
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_PATH "/soc/pin-controller@48000000/i2c3_scl_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FULL_NAME "i2c3_scl_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pa7 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_pinmux 1796
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_PATH "/soc/pin-controller@48000000/i2c3_scl_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FULL_NAME "i2c3_scl_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pb10 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_pinmux 6660
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_PATH "/soc/pin-controller@48000000/i2c3_scl_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FULL_NAME "i2c3_scl_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pb13 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_pinmux 7428
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_PATH "/soc/pin-controller@48000000/i2c3_scl_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FULL_NAME "i2c3_scl_pc0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pc0 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_pinmux 8196
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_PATH "/soc/pin-controller@48000000/i2c3_sda_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FULL_NAME "i2c3_sda_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pb11 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_pinmux 6916
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_PATH "/soc/pin-controller@48000000/i2c3_sda_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FULL_NAME "i2c3_sda_pb14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pb14 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_pinmux 7684
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_PATH "/soc/pin-controller@48000000/i2c3_sda_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FULL_NAME "i2c3_sda_pb4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pb4 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_pinmux 5124
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_PATH "/soc/pin-controller@48000000/i2c3_sda_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FULL_NAME "i2c3_sda_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pc1 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_pinmux 8452
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_ck_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_PATH "/soc/pin-controller@48000000/i2s2_ck_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_FULL_NAME "i2s2_ck_pa8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pa8 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_pinmux 2053
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_ck_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_PATH "/soc/pin-controller@48000000/i2s2_ck_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_FULL_NAME "i2s2_ck_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pa9 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_pinmux 2309
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_ck_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_PATH "/soc/pin-controller@48000000/i2s2_ck_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_FULL_NAME "i2s2_ck_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_ORD 84

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pb10 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_pinmux 6661
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_ck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_PATH "/soc/pin-controller@48000000/i2s2_ck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_FULL_NAME "i2s2_ck_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_ORD 85

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pb13 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_pinmux 7429
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ck_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_sd_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_PATH "/soc/pin-controller@48000000/i2s2_sd_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_FULL_NAME "i2s2_sd_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_ORD 86

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_EXISTS 1
#define DT_N_NODELABEL_i2s2_sd_pa10 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_pinmux 2565
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_sd_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_PATH "/soc/pin-controller@48000000/i2s2_sd_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_FULL_NAME "i2s2_sd_pb15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_ORD 87

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_EXISTS 1
#define DT_N_NODELABEL_i2s2_sd_pb15 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_pinmux 7941
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_sd_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_PATH "/soc/pin-controller@48000000/i2s2_sd_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_FULL_NAME "i2s2_sd_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_ORD 88

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_EXISTS 1
#define DT_N_NODELABEL_i2s2_sd_pc1 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_pinmux 8451
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_sd_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_PATH "/soc/pin-controller@48000000/i2s2_sd_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_FULL_NAME "i2s2_sd_pc3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_ORD 89

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_EXISTS 1
#define DT_N_NODELABEL_i2s2_sd_pc3 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_pinmux 8965
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_sd_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_ws_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_PATH "/soc/pin-controller@48000000/i2s2_ws_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_FULL_NAME "i2s2_ws_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_ORD 90

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_EXISTS 1
#define DT_N_NODELABEL_i2s2_ws_pa9 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_pinmux 2307
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_ws_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_PATH "/soc/pin-controller@48000000/i2s2_ws_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_FULL_NAME "i2s2_ws_pb12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_ORD 91

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_EXISTS 1
#define DT_N_NODELABEL_i2s2_ws_pb12 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_pinmux 7173
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2s2_ws_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_PATH "/soc/pin-controller@48000000/i2s2_ws_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_FULL_NAME "i2s2_ws_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_ORD 92

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_EXISTS 1
#define DT_N_NODELABEL_i2s2_ws_pb9 DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_pinmux 6405
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2s2_ws_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_cts_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_PATH "/soc/pin-controller@48000000/lpuart1_cts_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FULL_NAME "lpuart1_cts_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_ORD 93

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_EXISTS 1
#define DT_N_NODELABEL_lpuart1_cts_pa6 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_pinmux 1544
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_cts_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_PATH "/soc/pin-controller@48000000/lpuart1_cts_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FULL_NAME "lpuart1_cts_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_ORD 94

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_EXISTS 1
#define DT_N_NODELABEL_lpuart1_cts_pb13 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_pinmux 7432
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rts_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_PATH "/soc/pin-controller@48000000/lpuart1_rts_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_FULL_NAME "lpuart1_rts_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_ORD 95

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rts_pa1 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_pinmux 264
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rts_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_PATH "/soc/pin-controller@48000000/lpuart1_rts_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FULL_NAME "lpuart1_rts_pb1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_ORD 96

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rts_pb1 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_pinmux 4360
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rts_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_PATH "/soc/pin-controller@48000000/lpuart1_rts_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FULL_NAME "lpuart1_rts_pb12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_ORD 97

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rts_pb12 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_pinmux 7176
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rx_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_PATH "/soc/pin-controller@48000000/lpuart1_rx_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FULL_NAME "lpuart1_rx_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_ORD 98

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rx_pb10 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_pinmux 6664
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rx_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_PATH "/soc/pin-controller@48000000/lpuart1_rx_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FULL_NAME "lpuart1_rx_pc0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_ORD 99

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rx_pc0 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_pinmux 8200
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_tx_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_PATH "/soc/pin-controller@48000000/lpuart1_tx_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FULL_NAME "lpuart1_tx_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_ORD 100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_EXISTS 1
#define DT_N_NODELABEL_lpuart1_tx_pb11 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_pinmux 6920
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_tx_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_PATH "/soc/pin-controller@48000000/lpuart1_tx_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FULL_NAME "lpuart1_tx_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_ORD 101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_EXISTS 1
#define DT_N_NODELABEL_lpuart1_tx_pc1 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_pinmux 8456
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_miso_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_PATH "/soc/pin-controller@48000000/spi1_miso_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FULL_NAME "spi1_miso_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_ORD 102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pa11 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_pinmux 2821
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_miso_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_PATH "/soc/pin-controller@48000000/spi1_miso_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FULL_NAME "spi1_miso_pb4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_ORD 103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pb4 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_pinmux 5125
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_mosi_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_PATH "/soc/pin-controller@48000000/spi1_mosi_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FULL_NAME "spi1_mosi_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_ORD 104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pa12 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_pinmux 3077
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_mosi_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_PATH "/soc/pin-controller@48000000/spi1_mosi_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FULL_NAME "spi1_mosi_pb5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_ORD 105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pb5 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_pinmux 5381
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_nss_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_PATH "/soc/pin-controller@48000000/spi1_nss_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FULL_NAME "spi1_nss_pa15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_ORD 106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa15 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_pinmux 3845
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_nss_pb2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_PATH "/soc/pin-controller@48000000/spi1_nss_pb2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FULL_NAME "spi1_nss_pb2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_ORD 107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pb2 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_pinmux 4613
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_sck_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_PATH "/soc/pin-controller@48000000/spi1_sck_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FULL_NAME "spi1_sck_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_ORD 108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa1 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_pinmux 261
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_sck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_PATH "/soc/pin-controller@48000000/spi1_sck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FULL_NAME "spi1_sck_pb3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_ORD 109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pb3 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_pinmux 4869
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_miso_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_PATH "/soc/pin-controller@48000000/spi2_miso_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_FULL_NAME "spi2_miso_pa5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_ORD 110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pa5 DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_pinmux 1283
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_miso_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_PATH "/soc/pin-controller@48000000/spi2_miso_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FULL_NAME "spi2_miso_pb14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_ORD 111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pb14 DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_pinmux 7685
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_miso_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_PATH "/soc/pin-controller@48000000/spi2_miso_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FULL_NAME "spi2_miso_pc2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_ORD 112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pc2 DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_pinmux 8709
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_mosi_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_PATH "/soc/pin-controller@48000000/spi2_mosi_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_FULL_NAME "spi2_mosi_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_ORD 113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pa10 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_pinmux 2565
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_mosi_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_PATH "/soc/pin-controller@48000000/spi2_mosi_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FULL_NAME "spi2_mosi_pb15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_ORD 114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pb15 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_pinmux 7941
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_mosi_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_PATH "/soc/pin-controller@48000000/spi2_mosi_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FULL_NAME "spi2_mosi_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_ORD 115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pc1 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_pinmux 8451
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_mosi_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_PATH "/soc/pin-controller@48000000/spi2_mosi_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FULL_NAME "spi2_mosi_pc3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_ORD 116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pc3 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_pinmux 8965
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_nss_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_PATH "/soc/pin-controller@48000000/spi2_nss_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_FULL_NAME "spi2_nss_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_ORD 117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pa9 DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_pinmux 2307
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_nss_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_PATH "/soc/pin-controller@48000000/spi2_nss_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FULL_NAME "spi2_nss_pb12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_ORD 118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb12 DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_pinmux 7173
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_nss_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_PATH "/soc/pin-controller@48000000/spi2_nss_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FULL_NAME "spi2_nss_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_ORD 119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb9 DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_pinmux 6405
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_PATH "/soc/pin-controller@48000000/spi2_sck_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_FULL_NAME "spi2_sck_pa8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_ORD 120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pa8 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_pinmux 2053
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_PATH "/soc/pin-controller@48000000/spi2_sck_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FULL_NAME "spi2_sck_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_ORD 121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pa9 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_pinmux 2309
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_PATH "/soc/pin-controller@48000000/spi2_sck_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FULL_NAME "spi2_sck_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_ORD 122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb10 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_pinmux 6661
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_PATH "/soc/pin-controller@48000000/spi2_sck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FULL_NAME "spi2_sck_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_ORD 123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb13 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_pinmux 7429
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim16_ch1_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_PATH "/soc/pin-controller@48000000/tim16_ch1_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FULL_NAME "tim16_ch1_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_ORD 124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_EXISTS 1
#define DT_N_NODELABEL_tim16_ch1_pa6 DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_pinmux 1550
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim16_ch1_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_PATH "/soc/pin-controller@48000000/tim16_ch1_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FULL_NAME "tim16_ch1_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_ORD 125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_EXISTS 1
#define DT_N_NODELABEL_tim16_ch1_pb8 DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_pinmux 6158
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim16_ch1n_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_PATH "/soc/pin-controller@48000000/tim16_ch1n_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FULL_NAME "tim16_ch1n_pb6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_ORD 126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_EXISTS 1
#define DT_N_NODELABEL_tim16_ch1n_pb6 DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_pinmux 5646
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim17_ch1_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_PATH "/soc/pin-controller@48000000/tim17_ch1_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FULL_NAME "tim17_ch1_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_ORD 127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_EXISTS 1
#define DT_N_NODELABEL_tim17_ch1_pa7 DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_pinmux 1806
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim17_ch1_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_PATH "/soc/pin-controller@48000000/tim17_ch1_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FULL_NAME "tim17_ch1_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_ORD 128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_EXISTS 1
#define DT_N_NODELABEL_tim17_ch1_pb9 DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_pinmux 6414
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim17_ch1n_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_PATH "/soc/pin-controller@48000000/tim17_ch1n_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FULL_NAME "tim17_ch1n_pb7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_ORD 129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_EXISTS 1
#define DT_N_NODELABEL_tim17_ch1n_pb7 DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_pinmux 5902
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch1_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_PATH "/soc/pin-controller@48000000/tim1_ch1_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FULL_NAME "tim1_ch1_pa8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_ORD 130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1_pa8 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_pinmux 2049
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch1n_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_PATH "/soc/pin-controller@48000000/tim1_ch1n_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FULL_NAME "tim1_ch1n_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_ORD 131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pa7 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_pinmux 1793
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch1n_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_PATH "/soc/pin-controller@48000000/tim1_ch1n_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FULL_NAME "tim1_ch1n_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_ORD 132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pb13 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_pinmux 7425
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch2_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_PATH "/soc/pin-controller@48000000/tim1_ch2_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FULL_NAME "tim1_ch2_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_ORD 133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2_pa9 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_pinmux 2305
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch2n_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_PATH "/soc/pin-controller@48000000/tim1_ch2n_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FULL_NAME "tim1_ch2n_pb14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_ORD 134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pb14 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_pinmux 7681
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch2n_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_PATH "/soc/pin-controller@48000000/tim1_ch2n_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FULL_NAME "tim1_ch2n_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_ORD 135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pb8 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_pinmux 6145
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch3_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_PATH "/soc/pin-controller@48000000/tim1_ch3_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FULL_NAME "tim1_ch3_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_ORD 136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3_pa10 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_pinmux 2561
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch3n_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_PATH "/soc/pin-controller@48000000/tim1_ch3n_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FULL_NAME "tim1_ch3n_pb15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_ORD 137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pb15 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_pinmux 7937
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch3n_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_PATH "/soc/pin-controller@48000000/tim1_ch3n_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FULL_NAME "tim1_ch3n_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_ORD 138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pb9 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_pinmux 6401
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch4_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_PATH "/soc/pin-controller@48000000/tim1_ch4_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FULL_NAME "tim1_ch4_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_ORD 139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_EXISTS 1
#define DT_N_NODELABEL_tim1_ch4_pa11 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_pinmux 2817
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch1_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_PATH "/soc/pin-controller@48000000/tim2_ch1_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FULL_NAME "tim2_ch1_pa0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_ORD 140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa0 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_pinmux 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch1_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_PATH "/soc/pin-controller@48000000/tim2_ch1_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FULL_NAME "tim2_ch1_pa15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_ORD 141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa15 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_pinmux 3841
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch1_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_PATH "/soc/pin-controller@48000000/tim2_ch1_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FULL_NAME "tim2_ch1_pa5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_ORD 142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa5 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_pinmux 1281
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch2_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_PATH "/soc/pin-controller@48000000/tim2_ch2_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FULL_NAME "tim2_ch2_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_ORD 143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_EXISTS 1
#define DT_N_NODELABEL_tim2_ch2_pa1 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_pinmux 257
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch2_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_PATH "/soc/pin-controller@48000000/tim2_ch2_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FULL_NAME "tim2_ch2_pb3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_ORD 144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_EXISTS 1
#define DT_N_NODELABEL_tim2_ch2_pb3 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_pinmux 4865
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch3_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_PATH "/soc/pin-controller@48000000/tim2_ch3_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FULL_NAME "tim2_ch3_pa2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_ORD 145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_EXISTS 1
#define DT_N_NODELABEL_tim2_ch3_pa2 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_pinmux 513
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch3_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_PATH "/soc/pin-controller@48000000/tim2_ch3_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FULL_NAME "tim2_ch3_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_ORD 146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_EXISTS 1
#define DT_N_NODELABEL_tim2_ch3_pb10 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_pinmux 6657
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch4_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_PATH "/soc/pin-controller@48000000/tim2_ch4_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FULL_NAME "tim2_ch4_pa3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_ORD 147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_EXISTS 1
#define DT_N_NODELABEL_tim2_ch4_pa3 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_pinmux 769
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch4_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_PATH "/soc/pin-controller@48000000/tim2_ch4_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FULL_NAME "tim2_ch4_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_ORD 148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_EXISTS 1
#define DT_N_NODELABEL_tim2_ch4_pb11 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_pinmux 6913
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_cts_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_PATH "/soc/pin-controller@48000000/usart1_cts_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FULL_NAME "usart1_cts_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_ORD 149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_EXISTS 1
#define DT_N_NODELABEL_usart1_cts_pa11 DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_pinmux 2823
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_cts_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_PATH "/soc/pin-controller@48000000/usart1_cts_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FULL_NAME "usart1_cts_pb4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_ORD 150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_EXISTS 1
#define DT_N_NODELABEL_usart1_cts_pb4 DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_pinmux 5127
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rts_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_PATH "/soc/pin-controller@48000000/usart1_rts_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FULL_NAME "usart1_rts_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_ORD 151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_EXISTS 1
#define DT_N_NODELABEL_usart1_rts_pa12 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_pinmux 3079
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rts_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_PATH "/soc/pin-controller@48000000/usart1_rts_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FULL_NAME "usart1_rts_pb3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_ORD 152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_EXISTS 1
#define DT_N_NODELABEL_usart1_rts_pb3 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_pinmux 4871
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rx_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_PATH "/soc/pin-controller@48000000/usart1_rx_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FULL_NAME "usart1_rx_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_ORD 153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pa10 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_pinmux 2567
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rx_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_PATH "/soc/pin-controller@48000000/usart1_rx_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FULL_NAME "usart1_rx_pb7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_ORD 154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pb7 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_pinmux 5895
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_tx_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_PATH "/soc/pin-controller@48000000/usart1_tx_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FULL_NAME "usart1_tx_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_ORD 155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pa9 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_pinmux 2311
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_tx_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_PATH "/soc/pin-controller@48000000/usart1_tx_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FULL_NAME "usart1_tx_pb6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_ORD 156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pb6 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_pinmux 5639
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart2_cts_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_PATH "/soc/pin-controller@48000000/usart2_cts_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_FULL_NAME "usart2_cts_pa0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_ORD 157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_EXISTS 1
#define DT_N_NODELABEL_usart2_cts_pa0 DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_pinmux 7
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_cts_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart2_rts_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_PATH "/soc/pin-controller@48000000/usart2_rts_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_FULL_NAME "usart2_rts_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_ORD 158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_EXISTS 1
#define DT_N_NODELABEL_usart2_rts_pa1 DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_pinmux 263
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rts_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart2_rx_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_PATH "/soc/pin-controller@48000000/usart2_rx_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FULL_NAME "usart2_rx_pa3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_ORD 159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_EXISTS 1
#define DT_N_NODELABEL_usart2_rx_pa3 DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_pinmux 775
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_rx_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart2_tx_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_PATH "/soc/pin-controller@48000000/usart2_tx_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FULL_NAME "usart2_tx_pa2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_ORD 160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_REQUIRES_ORDS \
	12, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_EXISTS 1
#define DT_N_NODELABEL_usart2_tx_pa2 DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_pinmux 519
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart2_tx_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /subghz
 *
 * Node identifier: DT_N_S_subghz
 *
 * Binding (compatible = gpio-subghz):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-subghz.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_subghz_PATH "/subghz"

/* Node's name with unit-address: */
#define DT_N_S_subghz_FULL_NAME "subghz"

/* Node parent (/) identifier: */
#define DT_N_S_subghz_PARENT DT_N
#define DT_N_S_subghz_FOREACH_CHILD(fn) fn(DT_N_S_subghz_S_pin_0) fn(DT_N_S_subghz_S_pin_1) fn(DT_N_S_subghz_S_pin_2) fn(DT_N_S_subghz_S_pin_3) fn(DT_N_S_subghz_S_pin_4) fn(DT_N_S_subghz_S_pin_5)
#define DT_N_S_subghz_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_subghz_S_pin_0) fn(DT_N_S_subghz_S_pin_1) fn(DT_N_S_subghz_S_pin_2) fn(DT_N_S_subghz_S_pin_3) fn(DT_N_S_subghz_S_pin_4) fn(DT_N_S_subghz_S_pin_5) 

/* Node's dependency ordinal: */
#define DT_N_S_subghz_ORD 161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_subghz_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_subghz_SUPPORTS_ORDS \
	162, /* /subghz/pin_0 */ \
	163, /* /subghz/pin_1 */ \
	164, /* /subghz/pin_2 */ \
	165, /* /subghz/pin_3 */ \
	166, /* /subghz/pin_4 */ \
	167, /* /subghz/pin_5 */

/* Existence and alternate IDs: */
#define DT_N_S_subghz_EXISTS 1
#define DT_N_INST_0_gpio_subghz DT_N_S_subghz

/* Special property macros: */
#define DT_N_S_subghz_REG_NUM 0
#define DT_N_S_subghz_IRQ_NUM 0
#define DT_N_S_subghz_COMPAT_MATCHES_gpio_subghz 1
#define DT_N_S_subghz_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_subghz_P_compatible {"gpio-subghz"}
#define DT_N_S_subghz_P_compatible_IDX_0 "gpio-subghz"
#define DT_N_S_subghz_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_subghz_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz, compatible, 0)
#define DT_N_S_subghz_P_compatible_LEN 1
#define DT_N_S_subghz_P_compatible_EXISTS 1

/*
 * Devicetree node: /subghz/pin_0
 *
 * Node identifier: DT_N_S_subghz_S_pin_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_subghz_S_pin_0_PATH "/subghz/pin_0"

/* Node's name with unit-address: */
#define DT_N_S_subghz_S_pin_0_FULL_NAME "pin_0"

/* Node parent (/subghz) identifier: */
#define DT_N_S_subghz_S_pin_0_PARENT DT_N_S_subghz
#define DT_N_S_subghz_S_pin_0_FOREACH_CHILD(fn) 
#define DT_N_S_subghz_S_pin_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_subghz_S_pin_0_ORD 162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_subghz_S_pin_0_REQUIRES_ORDS \
	19, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	161, /* /subghz */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_subghz_S_pin_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_subghz_S_pin_0_EXISTS 1
#define DT_N_ALIAS_rfswctrl1       DT_N_S_subghz_S_pin_0
#define DT_N_NODELABEL_rf_sw_ctrl1 DT_N_S_subghz_S_pin_0

/* Special property macros: */
#define DT_N_S_subghz_S_pin_0_REG_NUM 0
#define DT_N_S_subghz_S_pin_0_IRQ_NUM 0
#define DT_N_S_subghz_S_pin_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_subghz_S_pin_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_subghz_S_pin_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_subghz_S_pin_0_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_subghz_S_pin_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_subghz_S_pin_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_subghz_S_pin_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_subghz_S_pin_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_0, gpios, 0)
#define DT_N_S_subghz_S_pin_0_P_gpios_LEN 1
#define DT_N_S_subghz_S_pin_0_P_gpios_EXISTS 1
#define DT_N_S_subghz_S_pin_0_P_label "RF_SW_CTRL1"
#define DT_N_S_subghz_S_pin_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_0, label, 0) \
	fn(DT_N_S_subghz_S_pin_0, label, 1) \
	fn(DT_N_S_subghz_S_pin_0, label, 2) \
	fn(DT_N_S_subghz_S_pin_0, label, 3) \
	fn(DT_N_S_subghz_S_pin_0, label, 4) \
	fn(DT_N_S_subghz_S_pin_0, label, 5) \
	fn(DT_N_S_subghz_S_pin_0, label, 6) \
	fn(DT_N_S_subghz_S_pin_0, label, 7) \
	fn(DT_N_S_subghz_S_pin_0, label, 8) \
	fn(DT_N_S_subghz_S_pin_0, label, 9) \
	fn(DT_N_S_subghz_S_pin_0, label, 10)
#define DT_N_S_subghz_S_pin_0_P_label_EXISTS 1

/*
 * Devicetree node: /subghz/pin_1
 *
 * Node identifier: DT_N_S_subghz_S_pin_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_subghz_S_pin_1_PATH "/subghz/pin_1"

/* Node's name with unit-address: */
#define DT_N_S_subghz_S_pin_1_FULL_NAME "pin_1"

/* Node parent (/subghz) identifier: */
#define DT_N_S_subghz_S_pin_1_PARENT DT_N_S_subghz
#define DT_N_S_subghz_S_pin_1_FOREACH_CHILD(fn) 
#define DT_N_S_subghz_S_pin_1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_subghz_S_pin_1_ORD 163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_subghz_S_pin_1_REQUIRES_ORDS \
	19, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	161, /* /subghz */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_subghz_S_pin_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_subghz_S_pin_1_EXISTS 1
#define DT_N_ALIAS_rfswctrl2       DT_N_S_subghz_S_pin_1
#define DT_N_NODELABEL_rf_sw_ctrl2 DT_N_S_subghz_S_pin_1

/* Special property macros: */
#define DT_N_S_subghz_S_pin_1_REG_NUM 0
#define DT_N_S_subghz_S_pin_1_IRQ_NUM 0
#define DT_N_S_subghz_S_pin_1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_subghz_S_pin_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_subghz_S_pin_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_subghz_S_pin_1_P_gpios_IDX_0_VAL_pin 5
#define DT_N_S_subghz_S_pin_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_subghz_S_pin_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_subghz_S_pin_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_subghz_S_pin_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_1, gpios, 0)
#define DT_N_S_subghz_S_pin_1_P_gpios_LEN 1
#define DT_N_S_subghz_S_pin_1_P_gpios_EXISTS 1
#define DT_N_S_subghz_S_pin_1_P_label "RF_SW_CTRL2"
#define DT_N_S_subghz_S_pin_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_1, label, 0) \
	fn(DT_N_S_subghz_S_pin_1, label, 1) \
	fn(DT_N_S_subghz_S_pin_1, label, 2) \
	fn(DT_N_S_subghz_S_pin_1, label, 3) \
	fn(DT_N_S_subghz_S_pin_1, label, 4) \
	fn(DT_N_S_subghz_S_pin_1, label, 5) \
	fn(DT_N_S_subghz_S_pin_1, label, 6) \
	fn(DT_N_S_subghz_S_pin_1, label, 7) \
	fn(DT_N_S_subghz_S_pin_1, label, 8) \
	fn(DT_N_S_subghz_S_pin_1, label, 9) \
	fn(DT_N_S_subghz_S_pin_1, label, 10)
#define DT_N_S_subghz_S_pin_1_P_label_EXISTS 1

/*
 * Devicetree node: /subghz/pin_2
 *
 * Node identifier: DT_N_S_subghz_S_pin_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_subghz_S_pin_2_PATH "/subghz/pin_2"

/* Node's name with unit-address: */
#define DT_N_S_subghz_S_pin_2_FULL_NAME "pin_2"

/* Node parent (/subghz) identifier: */
#define DT_N_S_subghz_S_pin_2_PARENT DT_N_S_subghz
#define DT_N_S_subghz_S_pin_2_FOREACH_CHILD(fn) 
#define DT_N_S_subghz_S_pin_2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_subghz_S_pin_2_ORD 164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_subghz_S_pin_2_REQUIRES_ORDS \
	19, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	161, /* /subghz */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_subghz_S_pin_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_subghz_S_pin_2_EXISTS 1
#define DT_N_ALIAS_rfswctrl3       DT_N_S_subghz_S_pin_2
#define DT_N_NODELABEL_rf_sw_ctrl3 DT_N_S_subghz_S_pin_2

/* Special property macros: */
#define DT_N_S_subghz_S_pin_2_REG_NUM 0
#define DT_N_S_subghz_S_pin_2_IRQ_NUM 0
#define DT_N_S_subghz_S_pin_2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_subghz_S_pin_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_subghz_S_pin_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_subghz_S_pin_2_P_gpios_IDX_0_VAL_pin 3
#define DT_N_S_subghz_S_pin_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_subghz_S_pin_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_subghz_S_pin_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_subghz_S_pin_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_2, gpios, 0)
#define DT_N_S_subghz_S_pin_2_P_gpios_LEN 1
#define DT_N_S_subghz_S_pin_2_P_gpios_EXISTS 1
#define DT_N_S_subghz_S_pin_2_P_label "RF_SW_CTRL3"
#define DT_N_S_subghz_S_pin_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_2, label, 0) \
	fn(DT_N_S_subghz_S_pin_2, label, 1) \
	fn(DT_N_S_subghz_S_pin_2, label, 2) \
	fn(DT_N_S_subghz_S_pin_2, label, 3) \
	fn(DT_N_S_subghz_S_pin_2, label, 4) \
	fn(DT_N_S_subghz_S_pin_2, label, 5) \
	fn(DT_N_S_subghz_S_pin_2, label, 6) \
	fn(DT_N_S_subghz_S_pin_2, label, 7) \
	fn(DT_N_S_subghz_S_pin_2, label, 8) \
	fn(DT_N_S_subghz_S_pin_2, label, 9) \
	fn(DT_N_S_subghz_S_pin_2, label, 10)
#define DT_N_S_subghz_S_pin_2_P_label_EXISTS 1

/*
 * Devicetree node: /subghz/pin_3
 *
 * Node identifier: DT_N_S_subghz_S_pin_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_subghz_S_pin_3_PATH "/subghz/pin_3"

/* Node's name with unit-address: */
#define DT_N_S_subghz_S_pin_3_FULL_NAME "pin_3"

/* Node parent (/subghz) identifier: */
#define DT_N_S_subghz_S_pin_3_PARENT DT_N_S_subghz
#define DT_N_S_subghz_S_pin_3_FOREACH_CHILD(fn) 
#define DT_N_S_subghz_S_pin_3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_subghz_S_pin_3_ORD 165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_subghz_S_pin_3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	161, /* /subghz */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_subghz_S_pin_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_subghz_S_pin_3_EXISTS 1
#define DT_N_ALIAS_rftcxovcc       DT_N_S_subghz_S_pin_3
#define DT_N_NODELABEL_rf_tcxo_vcc DT_N_S_subghz_S_pin_3

/* Special property macros: */
#define DT_N_S_subghz_S_pin_3_REG_NUM 0
#define DT_N_S_subghz_S_pin_3_IRQ_NUM 0
#define DT_N_S_subghz_S_pin_3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_subghz_S_pin_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_subghz_S_pin_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_subghz_S_pin_3_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_subghz_S_pin_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_subghz_S_pin_3_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_subghz_S_pin_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_subghz_S_pin_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_3, gpios, 0)
#define DT_N_S_subghz_S_pin_3_P_gpios_LEN 1
#define DT_N_S_subghz_S_pin_3_P_gpios_EXISTS 1
#define DT_N_S_subghz_S_pin_3_P_label "RF_TXCO_VCC"
#define DT_N_S_subghz_S_pin_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_3, label, 0) \
	fn(DT_N_S_subghz_S_pin_3, label, 1) \
	fn(DT_N_S_subghz_S_pin_3, label, 2) \
	fn(DT_N_S_subghz_S_pin_3, label, 3) \
	fn(DT_N_S_subghz_S_pin_3, label, 4) \
	fn(DT_N_S_subghz_S_pin_3, label, 5) \
	fn(DT_N_S_subghz_S_pin_3, label, 6) \
	fn(DT_N_S_subghz_S_pin_3, label, 7) \
	fn(DT_N_S_subghz_S_pin_3, label, 8) \
	fn(DT_N_S_subghz_S_pin_3, label, 9) \
	fn(DT_N_S_subghz_S_pin_3, label, 10)
#define DT_N_S_subghz_S_pin_3_P_label_EXISTS 1

/*
 * Devicetree node: /subghz/pin_4
 *
 * Node identifier: DT_N_S_subghz_S_pin_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_subghz_S_pin_4_PATH "/subghz/pin_4"

/* Node's name with unit-address: */
#define DT_N_S_subghz_S_pin_4_FULL_NAME "pin_4"

/* Node parent (/subghz) identifier: */
#define DT_N_S_subghz_S_pin_4_PARENT DT_N_S_subghz
#define DT_N_S_subghz_S_pin_4_FOREACH_CHILD(fn) 
#define DT_N_S_subghz_S_pin_4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_subghz_S_pin_4_ORD 166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_subghz_S_pin_4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	161, /* /subghz */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_subghz_S_pin_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_subghz_S_pin_4_EXISTS 1
#define DT_N_ALIAS_dbradiorx       DT_N_S_subghz_S_pin_4
#define DT_N_NODELABEL_db_radio_rx DT_N_S_subghz_S_pin_4

/* Special property macros: */
#define DT_N_S_subghz_S_pin_4_REG_NUM 0
#define DT_N_S_subghz_S_pin_4_IRQ_NUM 0
#define DT_N_S_subghz_S_pin_4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_subghz_S_pin_4_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_subghz_S_pin_4_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_subghz_S_pin_4_P_gpios_IDX_0_VAL_pin 12
#define DT_N_S_subghz_S_pin_4_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_subghz_S_pin_4_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_subghz_S_pin_4_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_subghz_S_pin_4_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_4, gpios, 0)
#define DT_N_S_subghz_S_pin_4_P_gpios_LEN 1
#define DT_N_S_subghz_S_pin_4_P_gpios_EXISTS 1
#define DT_N_S_subghz_S_pin_4_P_label "DB_RADIO_RX"
#define DT_N_S_subghz_S_pin_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_4, label, 0) \
	fn(DT_N_S_subghz_S_pin_4, label, 1) \
	fn(DT_N_S_subghz_S_pin_4, label, 2) \
	fn(DT_N_S_subghz_S_pin_4, label, 3) \
	fn(DT_N_S_subghz_S_pin_4, label, 4) \
	fn(DT_N_S_subghz_S_pin_4, label, 5) \
	fn(DT_N_S_subghz_S_pin_4, label, 6) \
	fn(DT_N_S_subghz_S_pin_4, label, 7) \
	fn(DT_N_S_subghz_S_pin_4, label, 8) \
	fn(DT_N_S_subghz_S_pin_4, label, 9) \
	fn(DT_N_S_subghz_S_pin_4, label, 10)
#define DT_N_S_subghz_S_pin_4_P_label_EXISTS 1

/*
 * Devicetree node: /subghz/pin_5
 *
 * Node identifier: DT_N_S_subghz_S_pin_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_subghz_S_pin_5_PATH "/subghz/pin_5"

/* Node's name with unit-address: */
#define DT_N_S_subghz_S_pin_5_FULL_NAME "pin_5"

/* Node parent (/subghz) identifier: */
#define DT_N_S_subghz_S_pin_5_PARENT DT_N_S_subghz
#define DT_N_S_subghz_S_pin_5_FOREACH_CHILD(fn) 
#define DT_N_S_subghz_S_pin_5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_subghz_S_pin_5_ORD 167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_subghz_S_pin_5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	161, /* /subghz */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_subghz_S_pin_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_subghz_S_pin_5_EXISTS 1
#define DT_N_ALIAS_dbradiotx       DT_N_S_subghz_S_pin_5
#define DT_N_NODELABEL_db_radio_tx DT_N_S_subghz_S_pin_5

/* Special property macros: */
#define DT_N_S_subghz_S_pin_5_REG_NUM 0
#define DT_N_S_subghz_S_pin_5_IRQ_NUM 0
#define DT_N_S_subghz_S_pin_5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_subghz_S_pin_5_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_subghz_S_pin_5_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_subghz_S_pin_5_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_subghz_S_pin_5_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_subghz_S_pin_5_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_subghz_S_pin_5_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_subghz_S_pin_5_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_5, gpios, 0)
#define DT_N_S_subghz_S_pin_5_P_gpios_LEN 1
#define DT_N_S_subghz_S_pin_5_P_gpios_EXISTS 1
#define DT_N_S_subghz_S_pin_5_P_label "DB_RADIO_TX"
#define DT_N_S_subghz_S_pin_5_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_subghz_S_pin_5, label, 0) \
	fn(DT_N_S_subghz_S_pin_5, label, 1) \
	fn(DT_N_S_subghz_S_pin_5, label, 2) \
	fn(DT_N_S_subghz_S_pin_5, label, 3) \
	fn(DT_N_S_subghz_S_pin_5, label, 4) \
	fn(DT_N_S_subghz_S_pin_5, label, 5) \
	fn(DT_N_S_subghz_S_pin_5, label, 6) \
	fn(DT_N_S_subghz_S_pin_5, label, 7) \
	fn(DT_N_S_subghz_S_pin_5, label, 8) \
	fn(DT_N_S_subghz_S_pin_5, label, 9) \
	fn(DT_N_S_subghz_S_pin_5, label, 10)
#define DT_N_S_subghz_S_pin_5_P_label_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_58004000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40008000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40008000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_COMPAT_fixed_partitions_LABEL_send_storage DT_N_S_memory_20000000_S_partitions_S_partition_2000fe00
#define DT_COMPAT_fixed_partitions_LABEL_send_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_recv_storage DT_N_S_memory_20000000_S_partitions_S_partition_2000ff00
#define DT_COMPAT_fixed_partitions_LABEL_recv_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32wl55jc2_nucleo 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v6m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv6m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32wl_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ipcc_mailbox 1
#define DT_COMPAT_HAS_OKAY_st_stm32wl_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lptim 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lpuart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m0_ 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_st_stm32_hse_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32wb_pll_clock 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_gpio_subghz 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32wl55jc2_nucleo_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v6m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv6m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32wl_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_st_stm32_ipcc_mailbox_NUM_OKAY 1
#define DT_N_INST_st_stm32wl_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_lptim_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 4
#define DT_N_INST_st_stm32_lpuart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m0__NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_st_stm32_hse_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32wb_pll_clock_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_gpio_subghz_NUM_OKAY 1
#define DT_FOREACH_OKAY_INST_st_stm32wl55jc2_nucleo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_v6m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_armv6m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32wl_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_ipcc_mailbox(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32wl_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_lptim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_st_stm32_lpuart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_cortex_m0_(fn) fn(0)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_hse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32wb_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_gpio_subghz(fn) fn(0)

/*
 * Bus information for status "okay" nodes of each compatible
 */
